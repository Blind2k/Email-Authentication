{"version":3,"sources":["components/Layout/MainNavigation.module.css","components/Auth/AuthForm.module.css","components/Profile/UserProfile.module.css","components/UI/LoadingSpinner.module.css","components/StartingPage/StartingPageContent.module.css","store/Auth-context.js","assets/logo.png","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Layout/PopupModal.js","components/Profile/PasswordChange.js","components/Profile/EmailChange.js","components/Profile/UserProfile.js","components/UI/LoadingSpinner.js","components/Auth/AuthForm.js","pages/AuthPage.js","components/StartingPage/StartingPageContent.js","pages/HomePage.js","App.js","index.js","components/Profile/ProfileForm.module.css"],"names":["module","exports","logoutTime","AuthContext","React","createContext","token","isLogged","login","logout","calculateRemainingTime","experationTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","tokenObj","storedToken","localStorage","getItem","storedTime","remainingTime","removeItem","duration","retriveToken","useState","setToken","userIsLogged","logoutHandler","useCallback","clearTimeout","useEffect","console","log","setTimeout","contextValue","setItem","Provider","value","children","MainNavigation","authCtx","useContext","authContext","isLoggedIn","className","classes","header","to","src","LogoTop","logo_top","alt","nav","activeClassName","active","onClick","Layout","portalElement","document","getElementById","PopupModal","isShowing","setHide","errorMessage","ReactDOM","createPortal","Fragment","tabIndex","role","type","PasswordChange","history","useHistory","passwordRef","useRef","didGood","setGood","hasError","setError","setErrorMessage","form","onSubmit","event","preventDefault","passwordCurrent","current","trim","fetch","method","body","JSON","stringify","idToken","password","returnSecureToken","headers","then","response","ok","json","data","error","message","replace","catch","prevState","control","htmlFor","id","ref","action","EmailChange","emailRef","emailCurrent","email","UserProfile","profile","LoadingSpinner","spinner","AuthForm","isLogin","setIsLogin","isloading","setloading","auth","urlEnd","expiresIn","toISOString","required","actions","toggle","AuthPage","StartingPageContent","starting","HomePage","NoPageFound","lazy","App","fallback","path","exact","render"],"mappings":"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","file":"static/js/main.a6d06965.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__VtfOg\",\"nav\":\"MainNavigation_nav__1emo9\",\"active\":\"MainNavigation_active__16ziw\",\"logo_top\":\"MainNavigation_logo_top__3ebFT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__2YYrg\",\"control\":\"AuthForm_control__1gv-Q\",\"actions\":\"AuthForm_actions__mlbFH\",\"toggle\":\"AuthForm_toggle__cW_Oc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2Q-lt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__30ZXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"starting\":\"StartingPageContent_starting__2OZly\"};","import React, { useState, useEffect, useCallback } from \"react\";\n\nlet logoutTime;\nconst AuthContext = React.createContext({\n   // Variables\n   token: \"\",\n   isLogged: false,\n   // To change variables\n   login: token => {},\n   logout: () => {},\n});\n\n// TIME LEFT 4 TOKEN\nconst calculateRemainingTime = experationTime => {\n   const currentTime = new Date().getTime();\n   const ExperationMili = new Date(experationTime).getTime();\n\n   const timeRemaining = ExperationMili - currentTime;\n   return timeRemaining;\n};\n\n// TOKEN BRING\nconst retriveToken = () => {\n   const storedToken = localStorage.getItem(\"verificationToken\");\n   const storedTime = localStorage.getItem(\"verificationTime\");\n   // CURRENT TOKEN TIME LEFT\n   const remainingTime = calculateRemainingTime(storedTime);\n   if (remainingTime <= 3600 || remainingTime <= 0) {\n      localStorage.removeItem(\"verificationToken\");\n      localStorage.removeItem(\"verificationTime\");\n      return null;\n   }\n   return { token: storedToken, duration: remainingTime };\n};\n// OFF CONTEXT PROVIDER => MANAGING OFF RELATED STATE\nexport const AuthContextProvider = props => {\n   const tokenObj = retriveToken();\n   let initialToken;\n   if (tokenObj) {\n      initialToken = tokenObj.token;\n   }\n   const [token, setToken] = useState(initialToken);\n\n   const userIsLogged = !!token; //\"!!\" turns something to a boolean\n\n   const logoutHandler = useCallback(() => {\n      setToken(null);\n      localStorage.removeItem(\"verificationToken\");\n      localStorage.removeItem(\"verificationTime\");\n\n      // START AGAIN WHEN REENTER\n      if (logoutTime) {\n         clearTimeout(logoutTime);\n      }\n   }, []);\n\n   const loginHandler = (token, experationTime) => {\n      setToken(token);\n      localStorage.setItem(\"verificationToken\", token);\n      localStorage.setItem(\"verificationTime\", experationTime);\n\n      const remainingTime = calculateRemainingTime(experationTime);\n      logoutTime = setTimeout(logoutHandler, remainingTime);\n   };\n\n   // AUTO LOG THE USER TIMER\n   useEffect(() => {\n      if (tokenObj) {\n         console.log(tokenObj.duration);\n         logoutTime = setTimeout(logoutHandler, tokenObj.duration);\n      }\n   }, [tokenObj, logoutHandler]);\n\n   // SUMMERIZING\n   const contextValue = {\n      token: token,\n      isLogged: userIsLogged,\n      login: loginHandler,\n      logout: logoutHandler,\n   };\n   return (\n      <AuthContext.Provider value={contextValue}>\n         {props.children}\n      </AuthContext.Provider>\n   );\n};\nexport default AuthContext;\n","export default __webpack_public_path__ + \"static/media/logo.5bf39f11.png\";","import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\nimport LogoTop from \"../../assets/logo.png\";\nimport authContext from \"../../store/Auth-context\";\n\nconst MainNavigation = () => {\n  const authCtx = useContext(authContext);\n\n  const isLoggedIn = authCtx.isLogged;\n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n          <div>\n            <img src={LogoTop} className={classes.logo_top} alt=\"Our logo\" />\n          </div>\n      </Link>\n      <nav className={classes.nav}>\n        <ul>\n          {!isLoggedIn && <li><NavLink activeClassName={classes.active} to=\"/auth\">Login</NavLink></li>}\n          {isLoggedIn && <li><NavLink activeClassName={classes.active} to=\"/profile\">Profile</NavLink></li>}\n          {isLoggedIn && <li><button onClick={authCtx.logout}><Link to=\"/\">Logout</Link></button></li>}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./PopupModal.css\";\nimport LogoTop from \"../../assets/logo.png\";\n\nconst portalElement = document.getElementById('overlays');\n\nconst PopupModal = ({ isShowing, setHide, errorMessage }) =>\n  isShowing\n    ? ReactDOM.createPortal(\n        <React.Fragment>\n          <div className=\"modal-overlay\" onClick={setHide} />\n          <div\n            className=\"modal-wrapper\"\n            aria-modal\n            aria-hidden\n            tabIndex={-1}\n            role=\"dialog\"\n            onClick={setHide}\n          >\n            <div className=\"modal\">\n              <div className=\"modal-header\">\n                <img src={LogoTop} className=\"logo-error\" alt=\"Our logo\" />\n\n                <button\n                  type=\"button\"\n                  className=\"modal-close-button\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n\n              <p className=\"modal-text\">{errorMessage}</p>\n            </div>\n          </div>\n        </React.Fragment>,\n        portalElement\n      )\n    : null;\n\nexport default PopupModal;\n","import React, { useRef, useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/Auth-context\";\n// VISUAL HOOKS\nimport classes from \"./ProfileForm.module.css\";\nimport PopupModal from \"../Layout/PopupModal\";\n\nconst END_URL =\n   \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyC6dGNwU02TWzTJrXdA14s88P5FqjPH45g\";\n\nconst PasswordChange = () => {\n   const history = useHistory();\n   // GET USER INPUT\n   const passwordRef = useRef();\n   const authCtx = useContext(AuthContext);\n   // GOOD CHANGE\n   const [didGood, setGood] = useState(false);\n   // ERROR\n   const [hasError, setError] = useState(false);\n   const [errorMessage, setErrorMessage] = useState();\n\n   const errorHandler = () => {\n      setError(prevState => !prevState);\n   };\n\n   const popupHandler = () => {\n      setGood(prevState => !prevState);\n   };\n\n   // VALIDATE\n   const submitFormHandler = event => {\n      event.preventDefault();\n      const passwordCurrent = passwordRef.current.value;\n      if (passwordCurrent.trim() === \" \") {\n         return;\n      } else {\n         fetch(END_URL, {\n            method: \"POST\",\n            body: JSON.stringify({\n               idToken: authCtx.token,\n               password: passwordCurrent,\n               returnSecureToken: true,\n            }),\n            headers: {\n               \"Content-Type\": \"application/json\",\n            },\n         })\n            .then(response => {\n               if (response.ok) {\n                  return response.json();\n               } else {\n                  // ERROR FROM SERVER\n                  response.json().then(data => {\n                     setError(true);\n                     setErrorMessage(data.error.message);\n                  });\n               }\n            })\n            .then(data => {\n               setGood(true);\n               authCtx.token = data.idToken;\n               setTimeout(() => {history.replace(\"/\")}, 2000);\n            })\n            .catch(error => {\n               console.log(error);\n            });\n      }\n   };\n   return (\n      <form className={classes.form} onSubmit={submitFormHandler}>\n         {/* GOOD THING */}\n         {didGood && (\n            <PopupModal\n               errorMessage=\"Password Change\"\n               setHide={popupHandler}\n               isShowing={didGood}\n            />\n         )}\n         {/* NOT GOOD */}\n         {hasError && (\n            <PopupModal\n               errorMessage={errorMessage}\n               setHide={errorHandler}\n               isShowing={hasError}\n            />\n         )}\n         \n         <div className={classes.control}>\n            <label htmlFor=\"new-password\">New Password</label>\n            <input type=\"password\" id=\"new-password\" ref={passwordRef} />\n         </div>\n         <div className={classes.action}>\n            <button>Change Password</button>\n         </div>\n      </form>\n   );\n};\n\nexport default PasswordChange;\n","import React, { useRef, useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport AuthContext from \"../../store/Auth-context\";\r\n// VISUAL HOOKS\r\nimport classes from \"./ProfileForm.module.css\";\r\nimport ErrorModal from \"../Layout/PopupModal\";\r\n\r\nconst END_URL =\r\n   \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyC6dGNwU02TWzTJrXdA14s88P5FqjPH45g\";\r\n\r\nconst EmailChange = () => {\r\n   const history = useHistory();\r\n   // GET USER INPUT\r\n   const emailRef = useRef();\r\n   const authCtx = useContext(AuthContext);\r\n   // ERROR\r\n   const [hasError, setError] = useState(false);\r\n   const [errorMessage, setErrorMessage] = useState();\r\n   const errorHandler = () => {\r\n      setError(prevState => !prevState);\r\n   };\r\n   // VALIDATE\r\n   const submitFormHandler = event => {\r\n      event.preventDefault();\r\n      const emailCurrent = emailRef.current.value;\r\n      if (emailCurrent.trim() === \"\") {\r\n         return;\r\n      } else {\r\n         fetch(END_URL, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n               idToken: authCtx.token,\r\n               email: emailCurrent,\r\n               returnSecureToken: true,\r\n            }),\r\n            headers: {\r\n               \"Content-Type\": \"application/json\",\r\n            },\r\n         })\r\n         .then(response => {\r\n            if (response.ok) {\r\n               return response.json();\r\n            } else {\r\n               // ERROR FROM SERVER\r\n               response.json().then(data => {\r\n                  setError(true);\r\n                  setErrorMessage(data.error.message);\r\n               });\r\n            }\r\n         })\r\n         .then(data => {\r\n            authCtx.token = data.idToken;\r\n            history.replace(\"/\");\r\n         })\r\n         .catch(error => {\r\n            console.log(error);\r\n         });\r\n      }\r\n   };\r\n   return (\r\n      <form className={classes.form} onSubmit={submitFormHandler}>\r\n         {hasError && (\r\n            <ErrorModal\r\n               errorMessage={errorMessage}\r\n               setHide={errorHandler}\r\n               isShowing={hasError}\r\n            />\r\n         )}\r\n         <div className={classes.control}>\r\n            <label htmlFor=\"new-email\">New Email address</label>\r\n            <input type=\"email\" id=\"new-email\" ref={emailRef} />\r\n         </div>\r\n         <div className={classes.action}>\r\n            <button>Change email</button>\r\n         </div>\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default EmailChange;\r\n","import PasswordChange from './PasswordChange';\nimport EmailChange from './EmailChange';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <PasswordChange />\n      <EmailChange />\n      {/* <EmailChange /> */}\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import React, { useState, useRef, useContext} from \"react\";\n\n// VISUAL IMPORTS\nimport ErrorModal from \"../Layout/PopupModal\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./AuthForm.module.css\";\n\n// CONTEXT\nimport AuthContext from \"../../store/Auth-context\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AuthForm = () => {\n   // ERROR HANDELING\n   const [hasError, setError] = useState(false);\n   const [errorMessage, setErrorMessage] = useState();\n   // LOGIN\n   const [isLogin, setIsLogin] = useState(false);\n   const [isloading, setloading] = useState(false);\n   // GET VALUES\n   const emailRef = useRef();\n   const passwordRef = useRef();\n   // CONTEXT\n   const authCtx = useContext(AuthContext);\n\n   const history = useHistory();\n\n   //REDIRECT IF CREDENTIALS TO OLD\n   // useEffect(() => {\n   //    if (!authCtx) {\n   //      history.push(\"/auth\");\n   //    }\n   // },[authCtx, history]) \n\n   const switchAuthModeHandler = () => {\n      setIsLogin(prevState => !prevState);\n   };\n\n   const errorHandler = () => {\n      setError(prevState => !prevState);\n   };\n\n   // Const function => form\n   const submitLoginHandler = event => {\n      event.preventDefault();\n      setloading(true);\n      const emailCurrent = emailRef.current.value;\n      const passwordCurrent = passwordRef.current.value;\n      // CHECK VALUES\n      if (emailCurrent.trim() === \" \") return;\n      if (passwordCurrent.trim() === \" \") return;\n      // LOGGED IN?/!\n      let urlEnd;\n      if (isLogin) {\n         urlEnd =\n            \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyC6dGNwU02TWzTJrXdA14s88P5FqjPH45g\";\n      } else {\n         urlEnd =\n            \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyC6dGNwU02TWzTJrXdA14s88P5FqjPH45g\";\n      }\n      fetch(urlEnd, {\n         method: \"POST\",\n         body: JSON.stringify({\n            email: emailCurrent,\n            password: passwordCurrent,\n            returnSecureToken: true,\n         }),\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n      })\n      .then(response => {\n         setloading(false);\n         // GREAT SUCCESS\n         if (response.ok) {\n            console.log(\"succed\");\n            return response.json();\n         }\n         // NO SUCCESS\n         else {\n            response.json().then(data => {\n               setError(true);\n               setErrorMessage(data.error.message);\n               console.log(data);\n            });\n         }\n      })\n      .then(data => {\n         const experationTime = new Date(new Date().getTime() + (+data.expiresIn * 1000));\n         authCtx.login(data.idToken, experationTime.toISOString());\n         history.replace(\"/\")\n      })\n      // ERROR WHILE RETURNING\n      .catch(error => {\n         console.log(\"catch\" + error);\n      });\n\n\n   };\n   return (\n      <section className={classes.auth}>\n         {hasError && (\n            <ErrorModal\n               errorMessage={errorMessage}\n               setHide={errorHandler}\n               isShowing={hasError}\n            />\n         )}\n         <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n         <form onSubmit={submitLoginHandler}>\n            <div className={classes.control}>\n               <label htmlFor=\"email\">Your Email</label>\n               <input ref={emailRef} type=\"email\" id=\"email\" required />\n            </div>\n            <div className={classes.control}>\n               <label htmlFor=\"password\">Your Password</label>\n               <input\n                  ref={passwordRef}\n                  type=\"password\"\n                  id=\"password\"\n                  required\n               />\n            </div>\n            {/* UNDER THE FORM */}\n            {isloading ? (\n               <LoadingSpinner />\n            ) : (\n               <div className={classes.actions}>\n                  <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n                  <button\n                     type=\"button\"\n                     className={classes.toggle}\n                     onClick={switchAuthModeHandler}\n                  >\n                     {isLogin\n                        ? \"Create new account\"\n                        : \"Login with existing account\"}\n                  </button>\n               </div>\n            )}\n         </form>\n      </section>\n   );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","import classes from './StartingPageContent.module.css';\n\nconst StartingPageContent = () => {\n  return (\n    <section className={classes.starting}>\n      <h1>Welcome on Board!</h1>\n    </section>\n  );\n};\n\nexport default StartingPageContent;\n","import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n","import React, { Suspense, useContext } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// VISUAL IMPORTS\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nimport AuthContext from \"./store/Auth-context\";\nimport { Redirect } from \"react-router-dom\";\n\n// LAZY\nconst NoPageFound = React.lazy(() => import(\"./pages/NoPageFound\"));\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n  return (\n    <Layout>\n      <Suspense\n        fallback={<div><LoadingSpinner/></div>}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n          <Route path=\"/profile\">\n            {authCtx.isLogged ? <UserProfile /> : <Redirect to=\"auth\"/>}\n          </Route>\n          {/* LOST URL ROUTE */}\n          <Route path=\"*\">\n            <NoPageFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from \"./store/Auth-context\"\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  </AuthContextProvider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__3u3TM\",\"control\":\"ProfileForm_control__UN0nv\",\"action\":\"ProfileForm_action__BtH0Q\"};"],"sourceRoot":""}